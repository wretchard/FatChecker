/**) * Look for suitable index.html file in the webFolder, depending on the userAgent.  * remove all not js valid digits from the giver string * @param {Object} request The request object * @param {Object} response The response object parameter  **/function dispatchHandler ( request, response ) {	var responseTxt	if (settings.project.hostName=='localhost') {		 responseTxt='http://local.tracker.com:8081/index/'	}	else {		responseTxt='http://' + settings.project.hostName + '/index/'	}	response.headers.location=responseTxt;	return;}function UploadFat (request, response) {	var picFile	var picFileWidth	var picFileHeight	var vuserName	var measurementType	var vuuID	ThePicture=ds.CustomerPicture.createEntity()	for (var i=0; i< request.parts.length; i++)	{	switch(request.parts[i].name) {		case 'dataFile':			//nameFile=request.parts[i].fileName;			picFile=request.parts[i].asPicture;				picFileWidth=request.parts[i].asPicture.width;				picFileHeight=request.parts[i].asPicture.height;				break;		case 'userName':			vuserName=request.parts[i].asText;			break;		case 'measureType':			measurementType	=request.parts[i].asText;			break;		case 'uniqueID':			vuuID=request.parts[i].asText;			break;		}	}	TheCustomer=ds.Customer.find('userName=:1', vuserName)	ThePicture.custPic=picFile;	ThePicture.customer=TheCustomer;	ThePicture.picType=measurementType;	ThePicture.picFileWidth=picFileWidth;	ThePicture.picFileHeight=picFileHeight;	ThePicture.userName=vuserName;	ThePicture.uuidvar=vuuID;	ThePicture.dateTaken=new Date();	ThePicture.save();	return;	}